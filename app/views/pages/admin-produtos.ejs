<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gerenciar Produtos | Vitrine</title>
    <link rel="stylesheet" href="css/home.css">
    <link rel="stylesheet" href="css/reset.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>
        body {
            font-family: 'Proxima Nova', Arial, sans-serif;
            background-color: #ebebeb;
            color: #333;
            margin: 0;
            padding-top: 120px;
        }
        
        .header {
            background: #713112 !important;
            padding: 1rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            z-index: 1000;
        }
        
        .admin-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .admin-header {
            background: linear-gradient(135deg, #2ecc71 0%, #27ae60 100%);
            color: white;
            padding: 30px;
            border-radius: 10px;
            margin-bottom: 30px;
            text-align: center;
        }
        
        .search-section {
            background: white;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 20px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }
        
        .search-input {
            width: 100%;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 16px;
        }
        
        .products-grid {
            display: grid;
            gap: 20px;
        }
        
        .product-card {
            background: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            display: flex;
            gap: 20px;
            align-items: center;
        }
        
        .product-image {
            width: 80px;
            height: 80px;
            border-radius: 8px;
            object-fit: cover;
        }
        
        .product-info {
            flex: 1;
        }
        
        .product-name {
            font-size: 1.2rem;
            font-weight: bold;
            margin-bottom: 5px;
            color: #333;
        }
        
        .product-details {
            color: #666;
            margin-bottom: 3px;
        }
        
        .product-price {
            color: #28a745;
            font-weight: bold;
            font-size: 1.1rem;
        }
        
        .product-actions {
            display: flex;
            gap: 10px;
        }
        
        .btn {
            padding: 8px 16px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 0.9rem;
            text-decoration: none;
            display: inline-block;
        }
        
        .btn-info { background: #3498db; color: white; }
        .btn-danger { background: #e74c3c; color: white; }
        
        .nav-list {
            display: flex;
            list-style: none;
            gap: 1rem;
            align-items: center;
            margin-right: 20px;
        }
        
        .nav-list a {
            color: white;
            text-decoration: none;
            font-weight: 500;
            padding: 8px 16px;
            border-radius: 20px;
        }
        
        .nav-list a:hover {
            background: rgba(255,255,255,0.2);
        }
        
        .stats-summary {
            background: white;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 20px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            text-align: center;
        }
        
        .stats-number {
            font-size: 2rem;
            font-weight: bold;
            color: #2ecc71;
        }
        
        /* Modal de confirmação */
        .modal-overlay { position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); display: none; z-index: 1000; }
        .modal { position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background: white; border-radius: 8px; padding: 30px; max-width: 400px; width: 90%; box-shadow: 0 10px 30px rgba(0,0,0,0.3); }
        .modal h3 { margin: 0 0 15px 0; color: #dc3545; }
        .modal p { margin: 0 0 25px 0; color: #666; line-height: 1.5; }
        .modal-buttons { display: flex; gap: 10px; justify-content: flex-end; }
        .modal-btn { padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer; font-weight: bold; }
        .modal-btn-cancel { background: #6c757d; color: white; }
        .modal-btn-confirm { background: #dc3545; color: white; }
    </style>
</head>
<body>
    <header class="header">
        <a class="logo" href="/">
            <img src="imagens/logo(2).png" width="75px" height="75px" alt="Logo da Vitrine">
        </a>
        <nav>
            <ul class="nav-list">
                <li><a href="/">Início</a></li>
                <li><a href="/admin-dashboard">Dashboard Admin</a></li>
                <li><a href="#" onclick="logout()">Sair</a></li>
            </ul>
        </nav>
    </header>

    <div class="admin-container">
        <div class="admin-header">
            <h1><i class="fas fa-box"></i> Gerenciar Produtos</h1>
            <p>Visualize e gerencie todos os produtos cadastrados na plataforma</p>
        </div>

        <div class="stats-summary">
            <div class="stats-number" id="total-products">0</div>
            <div>Produtos Cadastrados</div>
        </div>

        <div class="search-section">
            <input type="text" class="search-input" id="search-input" placeholder="Buscar produtos por nome...">
        </div>

        <div class="products-grid" id="products-grid">
            <p style="text-align: center; color: #666;">Carregando produtos...</p>
        </div>
    </div>

    <!-- Modal de confirmação -->
    <div class="modal-overlay" id="delete-modal" onclick="hideDeleteModal()">
        <div class="modal" onclick="event.stopPropagation()">
            <h3><i class="fas fa-exclamation-triangle"></i> Confirmar Exclusão</h3>
            <p>Tem certeza que deseja excluir este produto? Esta ação não pode ser desfeita e o produto será removido permanentemente da plataforma.</p>
            <div class="modal-buttons">
                <button class="modal-btn modal-btn-cancel" onclick="hideDeleteModal()">Cancelar</button>
                <button class="modal-btn modal-btn-confirm" onclick="confirmDelete()">
                    <i class="fas fa-trash"></i> Excluir Produto
                </button>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            loadProducts();
            
            document.getElementById('search-input').addEventListener('input', function() {
                filterProducts(this.value);
            });
        });

        let allProducts = [];
        let productToDelete = null;

        async function loadProducts() {
            try {
                const response = await fetch('/api/products');
                const data = await response.json();
                
                if (data.success) {
                    allProducts = data.products;
                    document.getElementById('total-products').textContent = allProducts.length;
                    displayProducts(allProducts);
                } else {
                    document.getElementById('products-grid').innerHTML = '<p style="text-align: center; color: #666;">Erro ao carregar produtos</p>';
                }
            } catch (error) {
                console.error('Erro ao carregar produtos:', error);
                document.getElementById('products-grid').innerHTML = '<p style="text-align: center; color: #666;">Erro ao carregar produtos</p>';
            }
        }

        function displayProducts(products) {
            const productsGrid = document.getElementById('products-grid');
            
            if (products.length === 0) {
                productsGrid.innerHTML = '<p style="text-align: center; color: #666;">Nenhum produto encontrado</p>';
                return;
            }

            productsGrid.innerHTML = products.map(product => `
                <div class="product-card">
                    <img src="${product.IMAGEM_BASE64 ? `data:image/jpeg;base64,${product.IMAGEM_BASE64}` : 'https://placehold.co/80x80/cccccc/333333?text=Produto'}" 
                         alt="${product.NOME_PROD}" class="product-image">
                    <div class="product-info">
                        <div class="product-name">${product.NOME_PROD}</div>
                        <div class="product-details">ID: ${product.ID_PROD}</div>
                        <div class="product-details">Vendedor ID: ${product.ID_VENDEDOR}</div>
                        <div class="product-price">R$ ${parseFloat(product.VALOR_UNITARIO).toFixed(2).replace('.', ',')}</div>
                    </div>
                    <div class="product-actions">
                        <a href="/admin-produto-detalhes?id=${product.ID_PROD}" class="btn btn-info">
                            <i class="fas fa-eye"></i> Ver
                        </a>
                        <button class="btn btn-danger" onclick="deleteProduct(${product.ID_PROD}, '${product.NOME_PROD}')">
                            <i class="fas fa-trash"></i> Excluir
                        </button>
                    </div>
                </div>
            `).join('');
        }

        function filterProducts(searchTerm) {
            const filtered = allProducts.filter(product => 
                product.NOME_PROD.toLowerCase().includes(searchTerm.toLowerCase())
            );
            displayProducts(filtered);
        }

        function deleteProduct(productId, productName) {
            productToDelete = { id: productId, name: productName };
            showDeleteModal();
        }
        
        function showDeleteModal() {
            document.getElementById('delete-modal').style.display = 'block';
        }
        
        function hideDeleteModal() {
            document.getElementById('delete-modal').style.display = 'none';
            productToDelete = null;
        }
        
        async function confirmDelete() {
            if (!productToDelete) return;
            
            hideDeleteModal();
            
            try {
                const response = await fetch(`/api/admin/products/${productToDelete.id}`, {
                    method: 'DELETE'
                });
                const result = await response.json();
                
                if (result.success) {
                    showSuccessMessage('Produto excluído com sucesso!');
                    loadProducts();
                } else {
                    showErrorMessage(result.message || 'Erro ao excluir produto');
                }
            } catch (error) {
                showErrorMessage('Erro de conexão');
            }
            
            productToDelete = null;
        }
        
        function showSuccessMessage(message) {
            const toast = document.createElement('div');
            toast.style.cssText = 'position: fixed; top: 20px; right: 20px; background: #28a745; color: white; padding: 15px 20px; border-radius: 5px; z-index: 1001;';
            toast.textContent = message;
            document.body.appendChild(toast);
            setTimeout(() => toast.remove(), 3000);
        }
        
        function showErrorMessage(message) {
            const toast = document.createElement('div');
            toast.style.cssText = 'position: fixed; top: 20px; right: 20px; background: #dc3545; color: white; padding: 15px 20px; border-radius: 5px; z-index: 1001;';
            toast.textContent = message;
            document.body.appendChild(toast);
            setTimeout(() => toast.remove(), 3000);
        }

        function logout() {
            localStorage.removeItem('loggedUser');
            window.location.href = '/login';
        }
    </script>
</body>
</html>