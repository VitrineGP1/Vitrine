<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard do Vendedor | Vitrine</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css">
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font-family: Arial, sans-serif; background: #f5f5f5; }
        .header { background: #fff; padding: 1rem; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
        .container { max-width: 1200px; margin: 20px auto; padding: 0 20px; }
        .store-header { background: #fff; padding: 30px; border-radius: 8px; margin-bottom: 20px; display: flex; align-items: center; gap: 20px; }
        .store-image { width: 80px; height: 80px; border-radius: 50%; object-fit: cover; }
        .store-info h1 { color: #333; margin-bottom: 5px; }
        .store-info p { color: #666; }
        .dashboard-grid { display: grid; grid-template-columns: 1fr 1fr 1fr; gap: 20px; margin-bottom: 30px; }
        .card { background: #fff; padding: 20px; border-radius: 8px; text-align: center; }
        .card h3 { color: #666; font-size: 14px; margin-bottom: 10px; }
        .card .number { font-size: 32px; font-weight: bold; color: #333; }
        .card.sales .number { color: #28a745; }
        .card.products .number { color: #2d2d2d; }
        .card.views .number { color: #28a745; }
        .actions { display: flex; gap: 15px; margin-bottom: 30px; }
        .btn { padding: 12px 24px; border: none; border-radius: 6px; cursor: pointer; text-decoration: none; display: inline-block; font-weight: bold; }
        .btn-primary { background: #FF8C00; color: white; }
        .btn-success { background: #323232; color: white; }
        .products-section { background: #fff; padding: 20px; border-radius: 8px; }
        .products-grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); gap: 20px; margin-top: 20px; }
        .product-card { border: 1px solid #ddd; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 12px rgba(0,0,0,0.1); transition: transform 0.3s ease, box-shadow 0.3s ease; }
        .product-card:hover { transform: translateY(-5px); box-shadow: 0 8px 25px rgba(0,0,0,0.15); }
        .product-card img { width: 100%; height: 200px; object-fit: cover; }
        .product-card .info { padding: 20px; }
        .product-card h4 { margin-bottom: 8px; font-size: 1.1rem; color: #2c3e50; }
        .product-card .price { color: #27ae60; font-weight: bold; font-size: 1.2rem; }
        @media (max-width: 768px) { .dashboard-grid { grid-template-columns: 1fr; } .actions { flex-direction: column; } .products-grid { grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); } }
    </style>
</head>
<body>
    <header class="header">
        <div style="display: flex; justify-content: space-between; align-items: center;">
            <h2>Dashboard do Vendedor</h2>
            <a href="/" class="btn btn-primary">← Voltar à Home</a>
        </div>
    </header>

    <div class="container">
        <div class="store-header">
            <img id="store-image" src="https://placehold.co/80x80/cccccc/333333?text=Loja" alt="Foto da Loja" class="store-image">
            <div class="store-info">
                <h1 id="store-name">Carregando...</h1>
                <p>Vendedor desde 2024</p>
            </div>
        </div>

        <div class="dashboard-grid">
            <div class="card sales">
                <h3>DISPONÍVEL PARA SAQUE</h3>
                <div class="number" id="available-withdrawal">R$ 0,00</div>
            </div>
            <div class="card products">
                <h3>PRODUTOS ATIVOS</h3>
                <div class="number" id="products-count">0</div>
            </div>
            <div class="card views">
                <h3>TOTAL VENDIDO</h3>
                <div class="number" id="total-sold">R$ 0,00</div>
            </div>
        </div>

        <div class="actions">
            <a href="/criar-produto" class="btn btn-success">
                <i class="fas fa-plus"></i> Criar Produto
            </a>
            <a href="/perfil" class="btn btn-primary">
                <i class="fas fa-user"></i> Editar Perfil
            </a>
        </div>

        <div class="products-section">
            <h2>Meus Produtos</h2>
            <div class="products-grid" id="products-grid">
                <!-- Produtos serão carregados aqui -->
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            const user = JSON.parse(localStorage.getItem('loggedUser') || '{}');
            
            console.log('Dashboard - User data:', user);
            
            if (!user.id) {
                console.log('Dashboard - Sem ID, redirecionando...');
                window.location.href = '/login';
                return;
            }
            
            if (user.type !== 'seller') {
                console.log('Dashboard - Não é vendedor:', user.type);
                alert('Acesso negado. Apenas vendedores podem acessar o dashboard.');
                window.location.href = '/';
                return;
            }
            
            console.log('Dashboard - Usuário autenticado como vendedor');

            // Carregar dados da loja
            try {
                const sellerId = user.sellerId || user.id;
                const storeResponse = await fetch(`/api/seller_profile?id_vendedor=${sellerId}`);
                const storeData = await storeResponse.json();
                
                if (storeData.success) {
                    document.getElementById('store-name').textContent = storeData.seller.NOME_LOJA;
                    if (storeData.seller.IMAGEM_PERFIL_LOJA_BASE64) {
                        document.getElementById('store-image').src = `data:image/jpeg;base64,${storeData.seller.IMAGEM_PERFIL_LOJA_BASE64}`;
                    }
                }
            } catch (error) {
                console.error('Erro ao carregar dados da loja:', error);
            }

            // Carregar produtos
            try {
                const sellerId = user.sellerId || user.id;
                const productsResponse = await fetch(`/api/products?seller_id=${sellerId}`);
                const productsData = await productsResponse.json();
                
                if (productsData.success) {
                    const products = productsData.products;
                    document.getElementById('products-count').textContent = products.length;
                    
                    const grid = document.getElementById('products-grid');
                    grid.innerHTML = products.map(product => `
                        <div class="product-card">
                            ${product.IMAGEM_BASE64 ? 
                                `<img src="data:image/jpeg;base64,${product.IMAGEM_BASE64}" alt="${product.NOME_PROD}">` :
                                `<img src="https://placehold.co/200x150/cccccc/333333?text=Produto" alt="${product.NOME_PROD}">`
                            }
                            <div class="info">
                                <h4>${product.NOME_PROD}</h4>
                                <p class="price">R$ ${parseFloat(product.VALOR_UNITARIO).toFixed(2).replace('.', ',')}</p>
                            </div>
                        </div>
                    `).join('');
                }
            } catch (error) {
                console.error('Erro ao carregar produtos:', error);
            }

            // Carregar dados de vendas
            try {
                const sellerId = user.sellerId || user.id;
                const salesResponse = await fetch(`/api/seller-sales/${sellerId}`);
                const salesData = await salesResponse.json();
                
                if (salesData.success) {
                    const { totalSold, availableForWithdrawal } = salesData.data;
                    document.getElementById('total-sold').textContent = `R$ ${parseFloat(totalSold).toFixed(2).replace('.', ',')}`;
                    document.getElementById('available-withdrawal').textContent = `R$ ${parseFloat(availableForWithdrawal).toFixed(2).replace('.', ',')}`;
                }
            } catch (error) {
                console.error('Erro ao carregar dados de vendas:', error);
            }
        });
    </script>
</body>
</html>