<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Detalhes do Usuário | Admin</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css">
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font-family: Arial, sans-serif; background: #f5f5f5; }
        .header { background: #fff; padding: 1rem; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
        .container { max-width: 1200px; margin: 20px auto; padding: 0 20px; }
        .user-header { background: #fff; padding: 30px; border-radius: 8px; margin-bottom: 20px; display: flex; align-items: center; gap: 20px; }
        .user-avatar { width: 80px; height: 80px; border-radius: 50%; background: #ddd; display: flex; align-items: center; justify-content: center; font-size: 32px; color: #666; }
        .user-info h1 { color: #333; margin-bottom: 5px; }
        .user-info p { color: #666; }
        .user-type { padding: 4px 12px; border-radius: 12px; font-size: 12px; font-weight: bold; margin-left: 10px; }
        .type-seller { background: #e3f2fd; color: #1976d2; }
        .type-buyer { background: #e8f5e8; color: #388e3c; }
        .type-admin { background: #fff3e0; color: #f57c00; }
        .stats-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin-bottom: 30px; }
        .stat-card { background: #fff; padding: 20px; border-radius: 8px; text-align: center; }
        .stat-number { font-size: 32px; font-weight: bold; color: #333; }
        .stat-label { color: #666; margin-top: 5px; }
        .details-grid { display: grid; grid-template-columns: 1fr 1fr; gap: 20px; }
        .details-card { background: #fff; border-radius: 8px; overflow: hidden; }
        .card-header { padding: 20px; border-bottom: 1px solid #eee; }
        .card-content { padding: 20px; }
        .info-row { display: flex; justify-content: space-between; padding: 10px 0; border-bottom: 1px solid #f0f0f0; }
        .info-label { font-weight: bold; color: #333; }
        .info-value { color: #666; }
        .products-list { max-height: 300px; overflow-y: auto; }
        .product-item { display: flex; align-items: center; gap: 15px; padding: 15px 0; border-bottom: 1px solid #f0f0f0; }
        .product-image { width: 50px; height: 50px; border-radius: 4px; object-fit: cover; }
        .product-info { flex: 1; }
        .product-name { font-weight: bold; margin-bottom: 5px; }
        .product-price { color: #28a745; font-weight: bold; }
        .btn { padding: 12px 24px; border: none; border-radius: 6px; cursor: pointer; font-weight: bold; text-decoration: none; display: inline-block; }
        .btn-secondary { background: #6c757d; color: white; }
        .btn-danger { background: #dc3545; color: white; }
        
        /* Modal de confirmação */
        .modal-overlay { position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); display: none; z-index: 1000; }
        .modal { position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background: white; border-radius: 8px; padding: 30px; max-width: 400px; width: 90%; box-shadow: 0 10px 30px rgba(0,0,0,0.3); }
        .modal h3 { margin: 0 0 15px 0; color: #dc3545; }
        .modal p { margin: 0 0 25px 0; color: #666; line-height: 1.5; }
        .modal-buttons { display: flex; gap: 10px; justify-content: flex-end; }
        .modal-btn { padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer; font-weight: bold; }
        .modal-btn-cancel { background: #6c757d; color: white; }
        .modal-btn-confirm { background: #dc3545; color: white; }
    </style>
</head>
<body>
    <header class="header">
        <div style="display: flex; justify-content: space-between; align-items: center;">
            <h2>Detalhes do Usuário</h2>
            <a href="/admin-dashboard" class="btn btn-secondary">← Voltar ao Dashboard</a>
        </div>
    </header>

    <div class="container">
        <div class="user-header">
            <div class="user-avatar" id="user-avatar">
                <img id="user-avatar-image" src="" alt="Foto do Usuário" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; display: none;">
                <i class="fas fa-user" id="user-avatar-icon"></i>
            </div>
            <div class="user-info">
                <h1 id="user-name">Carregando...</h1>
                <p id="user-email">email@exemplo.com</p>
                <span class="user-type" id="user-type">Carregando...</span>
            </div>
        </div>

        <div class="stats-grid" id="stats-grid">
            <div class="stat-card">
                <div class="stat-number" id="total-products">0</div>
                <div class="stat-label">Produtos Cadastrados</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="total-sales">0</div>
                <div class="stat-label">Vendas Realizadas</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="total-revenue">R$ 0,00</div>
                <div class="stat-label">Faturamento Total</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="user-rating">4.5</div>
                <div class="stat-label">Reputação</div>
            </div>
        </div>

        <div class="details-grid" id="details-grid">
            <div class="details-card">
                <div class="card-header">
                    <h3><i class="fas fa-info-circle"></i> Informações Pessoais</h3>
                </div>
                <div class="card-content">
                    <div class="info-row">
                        <span class="info-label">ID:</span>
                        <span class="info-value" id="user-id">-</span>
                    </div>
                    <div class="info-row">
                        <span class="info-label">Nome:</span>
                        <span class="info-value" id="user-full-name">-</span>
                    </div>
                    <div class="info-row">
                        <span class="info-label">Email:</span>
                        <span class="info-value" id="user-full-email">-</span>
                    </div>
                    <div class="info-row">
                        <span class="info-label">Celular:</span>
                        <span class="info-value" id="user-phone">-</span>
                    </div>
                    <div class="info-row">
                        <span class="info-label">Cidade:</span>
                        <span class="info-value" id="user-city">-</span>
                    </div>
                    <div class="info-row">
                        <span class="info-label">UF:</span>
                        <span class="info-value" id="user-state">-</span>
                    </div>
                    <div class="info-row">
                        <span class="info-label">CEP:</span>
                        <span class="info-value" id="user-cep">-</span>
                    </div>
                </div>
            </div>

            <div class="details-card">
                <div class="card-header">
                    <h3><i class="fas fa-box"></i> Produtos</h3>
                </div>
                <div class="card-content">
                    <div class="products-list" id="products-list">
                        <p>Carregando produtos...</p>
                    </div>
                </div>
            </div>
        </div>

        <div style="margin-top: 30px; text-align: right;">
            <button class="btn" style="background: #6c757d; color: white; font-size: 12px; padding: 6px 12px;" onclick="deleteUser()" title="Excluir usuário">
                <i class="fas fa-trash"></i> Excluir Usuário
            </button>
        </div>
    </div>

    <!-- Modal de confirmação -->
    <div class="modal-overlay" id="delete-modal" onclick="hideDeleteModal()">
        <div class="modal" onclick="event.stopPropagation()">
            <h3><i class="fas fa-exclamation-triangle"></i> Confirmar Exclusão</h3>
            <p>Tem certeza que deseja excluir este usuário? Esta ação não pode ser desfeita e todos os dados relacionados serão perdidos permanentemente.</p>
            <div class="modal-buttons">
                <button class="modal-btn modal-btn-cancel" onclick="hideDeleteModal()">Cancelar</button>
                <button class="modal-btn modal-btn-confirm" onclick="confirmDelete()">
                    <i class="fas fa-trash"></i> Excluir Usuário
                </button>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            const urlParams = new URLSearchParams(window.location.search);
            const userId = urlParams.get('id');
            
            if (!userId) {
                alert('ID do usuário não fornecido');
                window.location.href = '/admin-usuarios';
                return;
            }

            await loadUserDetails(userId);
        });

        async function loadUserDetails(userId) {
            try {
                const response = await fetch(`/api/admin/user-details/${userId}`);
                const result = await response.json();
                
                if (result.success) {
                    // Configurar layout primeiro, antes de exibir dados
                    if (result.user.TIPO_USUARIO === 'A') {
                        setupAdminLayout();
                    } else if (result.user.TIPO_USUARIO === 'C') {
                        setupBuyerLayout();
                    }
                    
                    displayUserInfo(result.user);
                    displayUserStats(result.stats, result.user.TIPO_USUARIO);
                    displayUserProducts(result.products, result.user.TIPO_USUARIO);
                } else {
                    console.error('Erro ao carregar dados do usuário');
                    // Não mostrar alert para admin, apenas redirecionar silenciosamente
                    setTimeout(() => {
                        window.location.href = '/admin-usuarios';
                    }, 1000);
                }
            } catch (error) {
                console.error('Erro:', error);
                // Não mostrar alert de erro de conexão para admin
            }
        }

        function displayUserInfo(user) {
            document.getElementById('user-name').textContent = user.NOME_USUARIO;
            document.getElementById('user-email').textContent = user.EMAIL_USUARIO;
            document.getElementById('user-id').textContent = user.ID_USUARIO;
            document.getElementById('user-full-name').textContent = user.NOME_USUARIO;
            document.getElementById('user-full-email').textContent = user.EMAIL_USUARIO;
            document.getElementById('user-phone').textContent = user.CELULAR_USUARIO || 'Não informado';
            document.getElementById('user-city').textContent = user.CIDADE_USUARIO || 'Não informado';
            document.getElementById('user-state').textContent = user.UF_USUARIO || 'Não informado';
            document.getElementById('user-cep').textContent = user.CEP_USUARIO || 'Não informado';
            
            // Mostrar foto do usuário
            const avatarImage = document.getElementById('user-avatar-image');
            const avatarIcon = document.getElementById('user-avatar-icon');
            
            if (user.IMAGEM_PERFIL_BASE64) {
                avatarImage.src = user.IMAGEM_PERFIL_BASE64;
                avatarImage.style.display = 'block';
                avatarIcon.style.display = 'none';
            } else {
                avatarImage.style.display = 'none';
                avatarIcon.style.display = 'block';
            }
            
            const typeElement = document.getElementById('user-type');
            const typeClass = getTypeClass(user.TIPO_USUARIO);
            const typeLabel = getTypeLabel(user.TIPO_USUARIO);
            
            typeElement.textContent = typeLabel;
            typeElement.className = `user-type type-${typeClass}`;
            
            console.log('Tipo de usuário:', user.TIPO_USUARIO); // Debug
        }

        function displayUserStats(stats, userType) {
            // Não mostrar stats de vendedor para compradores
            if (userType === 'C') {
                return; // Stats já foram substituídos no setupBuyerLayout
            }
            
            // Verificar se stats existe antes de acessar propriedades
            if (!stats) {
                stats = {};
            }
            
            document.getElementById('total-products').textContent = stats.totalProducts || 0;
            document.getElementById('total-sales').textContent = stats.totalSales || 0;
            document.getElementById('total-revenue').textContent = `R$ ${(stats.totalRevenue || 0).toFixed(2).replace('.', ',')}`;
            document.getElementById('user-rating').textContent = stats.rating || '4.5';
        }

        function displayUserProducts(products, userType) {
            // Não mostrar produtos para compradores
            if (userType === 'C') {
                return; // Produtos já foram substituídos no setupBuyerLayout
            }
            
            const productsList = document.getElementById('products-list');
            
            if (products && products.length > 0) {
                productsList.innerHTML = products.map(product => `
                    <div class="product-item">
                        <img src="${product.IMAGEM_BASE64 ? `data:image/jpeg;base64,${product.IMAGEM_BASE64}` : 'https://placehold.co/50x50/cccccc/333333?text=Produto'}" 
                             alt="${product.NOME_PROD}" class="product-image">
                        <div class="product-info">
                            <div class="product-name">${product.NOME_PROD}</div>
                            <div class="product-price">R$ ${parseFloat(product.VALOR_UNITARIO).toFixed(2).replace('.', ',')}</div>
                        </div>
                    </div>
                `).join('');
            } else {
                productsList.innerHTML = '<p>Nenhum produto encontrado</p>';
            }
        }

        function getTypeClass(type) {
            switch(type) {
                case 'V': return 'seller';
                case 'C': return 'buyer';
                case 'A': return 'admin';
                default: return 'buyer';
            }
        }

        function getTypeLabel(type) {
            switch(type) {
                case 'V': return 'Vendedor';
                case 'C': return 'Comprador';
                case 'A': return 'Admin';
                default: return 'Comprador';
            }
        }

        function setupAdminLayout() {
            // Substituir stats para admin
            const statsGrid = document.getElementById('stats-grid');
            statsGrid.innerHTML = `
                <div class="stat-card">
                    <div class="stat-number" id="sales-7d">R$ 0,00</div>
                    <div class="stat-label">Vendas (7 dias)</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="sales-30d">R$ 0,00</div>
                    <div class="stat-label">Vendas (30 dias)</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="sales-365d">R$ 0,00</div>
                    <div class="stat-label">Vendas (365 dias)</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="available-balance">R$ 0,00</div>
                    <div class="stat-label">Saldo Disponível</div>
                </div>
            `;
            
            // Substituir segunda coluna por opções de saque
            const detailsGrid = document.getElementById('details-grid');
            const secondCard = detailsGrid.children[1];
            secondCard.innerHTML = `
                <div class="card-header">
                    <h3><i class="fas fa-money-bill-wave"></i> Saque</h3>
                </div>
                <div class="card-content">
                    <div class="info-row">
                        <span class="info-label">Saldo Disponível:</span>
                        <span class="info-value" style="color: #28a745; font-weight: bold;" id="balance-display">R$ 0,00</span>
                    </div>
                    <div style="margin: 20px 0;">
                        <label for="withdraw-amount" style="display: block; margin-bottom: 10px; font-weight: bold;">Valor do Saque:</label>
                        <input type="number" id="withdraw-amount" placeholder="0,00" style="width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 4px; margin-bottom: 15px;">
                        <button class="btn" style="background: #28a745; color: white; width: 100%;" onclick="requestWithdraw()">
                            <i class="fas fa-hand-holding-usd"></i> Solicitar Saque
                        </button>
                    </div>
                    <div style="margin-top: 20px; padding-top: 20px; border-top: 1px solid #eee;">
                        <h4 style="margin-bottom: 10px;">Últimos Saques:</h4>
                        <div id="withdraw-history">
                            <p style="color: #666; font-style: italic;">Nenhum saque realizado</p>
                        </div>
                    </div>
                </div>
            `;
            
            // Remover botão de excluir para admin
            const deleteButtonContainer = document.querySelector('div[style*="margin-top: 30px"]');
            if (deleteButtonContainer) {
                deleteButtonContainer.remove();
            }
            
            // Carregar dados específicos do admin
            loadAdminData();
        }
        
        function setupBuyerLayout() {
            console.log('Configurando layout de comprador'); // Debug
            
            // Substituir stats para comprador
            const statsGrid = document.getElementById('stats-grid');
            if (statsGrid) {
                statsGrid.innerHTML = `
                    <div class="stat-card">
                        <div class="stat-number" id="total-purchases">3</div>
                        <div class="stat-label">Compras Realizadas</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number" id="total-spent">R$ 245,90</div>
                        <div class="stat-label">Total Gasto</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number" id="total-reviews">2</div>
                        <div class="stat-label">Avaliações Feitas</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number" id="member-since">2024</div>
                        <div class="stat-label">Cliente Desde</div>
                    </div>
                `;
            }
            
            // Substituir segunda coluna por histórico de compras
            const detailsGrid = document.getElementById('details-grid');
            if (detailsGrid && detailsGrid.children[1]) {
                const secondCard = detailsGrid.children[1];
                secondCard.innerHTML = `
                    <div class="card-header">
                        <h3><i class="fas fa-shopping-bag"></i> Histórico de Compras</h3>
                    </div>
                    <div class="card-content">
                        <div style="padding: 15px; border-bottom: 1px solid #f0f0f0;">
                            <div style="font-weight: bold; margin-bottom: 5px;">Vaso Decorativo Artesanal</div>
                            <div style="color: #666; font-size: 0.9rem;">R$ 89,90 • Comprado em 15/12/2024</div>
                            <div style="color: #28a745; font-size: 0.8rem; margin-top: 3px;">Entregue</div>
                        </div>
                        <div style="padding: 15px; border-bottom: 1px solid #f0f0f0;">
                            <div style="font-weight: bold; margin-bottom: 5px;">Colar Artesanal</div>
                            <div style="color: #666; font-size: 0.9rem;">R$ 65,00 • Comprado em 10/12/2024</div>
                            <div style="color: #ffc107; font-size: 0.8rem; margin-top: 3px;">Em trânsito</div>
                        </div>
                        <div style="padding: 15px;">
                            <div style="font-weight: bold; margin-bottom: 5px;">Bolsa de Crochê</div>
                            <div style="color: #666; font-size: 0.9rem;">R$ 91,00 • Comprado em 05/12/2024</div>
                            <div style="color: #28a745; font-size: 0.8rem; margin-top: 3px;">Entregue</div>
                        </div>
                    </div>
                `;
            }
            
            // Ocultar botão de excluir para comprador
            const deleteButton = document.querySelector('button[onclick="deleteUser()"]');
            if (deleteButton) {
                deleteButton.style.display = 'none';
            }
        }

        
        async function loadAdminData() {
            // Simular dados de vendas por período
            document.getElementById('sales-7d').textContent = 'R$ 1.250,00';
            document.getElementById('sales-30d').textContent = 'R$ 4.800,00';
            document.getElementById('sales-365d').textContent = 'R$ 45.600,00';
            document.getElementById('available-balance').textContent = 'R$ 2.340,50';
            document.getElementById('balance-display').textContent = 'R$ 2.340,50';
        }
        
        function requestWithdraw() {
            const amount = document.getElementById('withdraw-amount').value;
            if (!amount || parseFloat(amount) <= 0) {
                alert('Por favor, insira um valor válido para o saque.');
                return;
            }
            
            if (parseFloat(amount) > 2340.50) {
                alert('Valor do saque não pode ser maior que o saldo disponível.');
                return;
            }
            
            if (confirm(`Confirma a solicitação de saque no valor de R$ ${parseFloat(amount).toFixed(2).replace('.', ',')}?`)) {
                alert('Solicitação de saque enviada com sucesso! O valor será processado em até 2 dias úteis.');
                document.getElementById('withdraw-amount').value = '';
                
                // Atualizar histórico
                const history = document.getElementById('withdraw-history');
                const now = new Date().toLocaleDateString('pt-BR');
                history.innerHTML = `
                    <div style="padding: 10px; background: #f8f9fa; border-radius: 4px; margin-bottom: 10px;">
                        <div style="display: flex; justify-content: space-between;">
                            <span>R$ ${parseFloat(amount).toFixed(2).replace('.', ',')}</span>
                            <span style="color: #ffc107;">Pendente</span>
                        </div>
                        <small style="color: #666;">${now}</small>
                    </div>
                ` + history.innerHTML;
            }
        }

        function deleteUser() {
            showDeleteModal();
        }
        
        function showDeleteModal() {
            document.getElementById('delete-modal').style.display = 'block';
        }
        
        function hideDeleteModal() {
            document.getElementById('delete-modal').style.display = 'none';
        }
        
        async function confirmDelete() {
            const urlParams = new URLSearchParams(window.location.search);
            const userId = urlParams.get('id');
            
            hideDeleteModal();
            
            try {
                const response = await fetch(`/api/admin/users/${userId}`, {
                    method: 'DELETE'
                });
                const result = await response.json();
                
                if (result.success) {
                    showSuccessMessage('Usuário excluído com sucesso!');
                    setTimeout(() => {
                        window.location.href = '/admin-usuarios';
                    }, 1500);
                } else {
                    showErrorMessage(result.message || 'Erro ao excluir usuário');
                }
            } catch (error) {
                showErrorMessage('Erro de conexão');
            }
        }
        
        function showSuccessMessage(message) {
            const toast = document.createElement('div');
            toast.style.cssText = 'position: fixed; top: 20px; right: 20px; background: #28a745; color: white; padding: 15px 20px; border-radius: 5px; z-index: 1001;';
            toast.textContent = message;
            document.body.appendChild(toast);
            setTimeout(() => toast.remove(), 3000);
        }
        
        function showErrorMessage(message) {
            const toast = document.createElement('div');
            toast.style.cssText = 'position: fixed; top: 20px; right: 20px; background: #dc3545; color: white; padding: 15px 20px; border-radius: 5px; z-index: 1001;';
            toast.textContent = message;
            document.body.appendChild(toast);
            setTimeout(() => toast.remove(), 3000);
        }
    </script>
</body>
</html>