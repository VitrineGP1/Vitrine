<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Criar Produto | Vitrine</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css">
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font-family: Arial, sans-serif; background: #f5f5f5; }
        .header { background: #fff; padding: 1rem; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
        .container { max-width: 800px; margin: 20px auto; padding: 0 20px; }
        .form-container { background: #fff; padding: 30px; border-radius: 8px; }
        
        /* Progress Steps */
        .progress-container { margin-bottom: 30px; }
        .progress-steps { display: flex; justify-content: space-between; margin-bottom: 20px; }
        .step { display: flex; flex-direction: column; align-items: center; flex: 1; position: relative; }
        .step-number { width: 40px; height: 40px; border-radius: 50%; background: #ddd; color: #666; display: flex; align-items: center; justify-content: center; font-weight: bold; margin-bottom: 8px; }
        .step.active .step-number { background: #FF8C00; color: white; }
        .step.completed .step-number { background: #28a745; color: white; }
        .step-title { font-size: 14px; color: #666; text-align: center; }
        .step.active .step-title { color: #FF8C00; font-weight: bold; }
        .step-line { position: absolute; top: 20px; left: 50%; width: 100%; height: 2px; background: #ddd; z-index: -1; }
        .step:last-child .step-line { display: none; }
        .step.completed .step-line { background: #28a745; }
        
        /* Form Steps */
        .form-step { display: none; }
        .form-step.active { display: block; }
        .form-group { margin-bottom: 20px; }
        .form-group label { display: block; margin-bottom: 5px; font-weight: bold; color: #333; }
        .form-group input, .form-group textarea, .form-group select { width: 100%; padding: 12px; border: 1px solid #ddd; border-radius: 6px; font-size: 18px; font-family: Arial, Helvetica, sans-serif; }
        .form-group textarea { height: 100px; resize: vertical; }
        .image-upload { border: 2px dashed #ddd; padding: 40px; text-align: center; border-radius: 6px; cursor: pointer; }
        .image-upload:hover { border-color: #FF8C00; }
        .image-preview { max-width: 200px; max-height: 200px; margin: 10px auto; display: none; }
        .btn { padding: 12px 24px; border: none; border-radius: 6px; cursor: pointer; font-weight: bold; text-decoration: none; display: inline-block; }
        .btn-primary { background: #FF8C00; color: white; }
        .btn-success { background: #FF8C00; color: white; }
        .btn-secondary { background: #6c757d; color: white; }
        .actions { display: flex; gap: 15px; justify-content: space-between; margin-top: 30px; }
        .message { padding: 15px; border-radius: 6px; margin-bottom: 20px; text-align: center; display: none; }
        .success { background: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
        .error { background: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
        .step-description { color: #666; margin-bottom: 20px; }
    </style>
</head>
<body>
    <header class="header">
        <div style="display: flex; justify-content: space-between; align-items: center;">
            <h2>Criar Novo Produto</h2>
            <a href="/perfil" class="btn btn-secondary">← Voltar ao Perfil</a>
        </div>
    </header>

    <div class="container">
        <div class="form-container">
            <div id="message" class="message"></div>
            
            <!-- Progress Steps -->
            <div class="progress-container">
                <div class="progress-steps">
                    <div class="step active" data-step="1">
                        <div class="step-number">1</div>
                        <div class="step-title">Categoria</div>
                        <div class="step-line"></div>
                    </div>
                    <div class="step" data-step="2">
                        <div class="step-number">2</div>
                        <div class="step-title">Informações Básicas</div>
                        <div class="step-line"></div>
                    </div>
                    <div class="step" data-step="3">
                        <div class="step-number">3</div>
                        <div class="step-title">Imagens</div>
                        <div class="step-line"></div>
                    </div>
                    <div class="step" data-step="4">
                        <div class="step-number">4</div>
                        <div class="step-title">Revisão</div>
                    </div>
                </div>
            </div>
            
            <form id="product-form">
                <!-- Etapa 1: Categoria -->
                <div class="form-step active" data-step="1">
                    <h3>Categoria do Produto</h3>
                    <p class="step-description">Primeiro, selecione a categoria do seu produto.</p>
                    
                    <div class="form-group">
                        <label for="categoria">Categoria *</label>
                        <select id="categoria" name="ID_CATEGORIA" required>
                            <option value="">Selecione uma categoria</option>
                            <option value="1">Artesanato</option>
                            <option value="2">Decoração</option>
                            <option value="3">Roupas</option>
                            <option value="4">Acessórios</option>
                        </select>
                    </div>

                    <div class="form-group" id="subcategoria-group" style="display: none;">
                        <label for="subcategoria">Subcategoria *</label>
                        <select id="subcategoria" name="SUBCATEGORIA">
                            <option value="">Selecione uma subcategoria</option>
                        </select>
                    </div>
                </div>

                <!-- Etapa 2: Informações Básicas -->
                <div class="form-step" data-step="2">
                    <h3>Informações Básicas do Produto</h3>
                    <p class="step-description">Agora vamos às informações principais do seu produto.</p>
                    
                    <div class="form-group">
                        <label for="nome">Nome do Produto *</label>
                        <input type="text" id="nome" name="NOME_PROD" required>
                    </div>

                    <div class="form-group">
                        <label for="descricao">Descrição do Produto <small style="color: #666;">(Máximo: 250 caracteres)</small></label>
                        <textarea id="descricao" name="DESCRICAO_PROD" maxlength="250" placeholder="Descreva as características, benefícios e detalhes do seu produto..."></textarea>
                        <small id="desc-counter" style="color: #666; font-size: 12px;">0/250 caracteres</small>
                    </div>

                    <div class="form-group">
                        <label for="valor">Preço (R$) *</label>
                        <input type="number" id="valor" name="VALOR_UNITARIO" step="0.01" min="0.01" required>
                        <div id="tax-info" style="margin-top: 10px; padding: 10px; border-radius: 6px; background: #f8f9fa; border-left: 4px solid #FF8C00; display: none;">
                            <div style="font-weight: bold; margin-bottom: 5px;">Informações sobre Taxa:</div>
                            <div id="tax-rate" style="color: #666;"></div>
                            <div id="final-value" style="color: #28a745; font-weight: bold; margin-top: 5px;"></div>
                            <div style="margin-top: 10px;">
                                <a href="/sobrenos" target="_blank" style="color: #FF8C00; text-decoration: none; font-size: 14px;">
                                    <i class="fas fa-info-circle"></i> Confira nossas taxas
                                </a>
                            </div>
                        </div>
                    </div>

                    <div class="form-group" id="tamanho-group" style="display: none;">
                        <label for="tamanho">Tamanho *</label>
                        <select id="tamanho" name="TAMANHO">
                            <option value="">Selecione um tamanho</option>
                            <option value="PP">PP</option>
                            <option value="P">P</option>
                            <option value="M">M</option>
                            <option value="G">G</option>
                            <option value="GG">GG</option>
                            <option value="XG">XG</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="quantidade">Quantidade em Estoque *</label>
                        <input type="number" id="quantidade" name="QUANTIDADE" min="1" required>
                    </div>

                    <div class="form-group" id="tabela-tamanhos-group" style="display: none;">
                        <label>Tabela de Tamanhos *</label>
                        <div style="border: 1px solid #ddd; border-radius: 6px; padding: 15px; background: #f9f9f9;">
                            <p style="margin-bottom: 15px; font-weight: bold;">Preencha as medidas para cada tamanho:</p>
                            <table style="width: 100%; border-collapse: collapse;">
                                <thead>
                                    <tr style="background: #f0f0f0;">
                                        <th style="border: 1px solid #ddd; padding: 8px; text-align: left;">Tamanho</th>
                                        <th style="border: 1px solid #ddd; padding: 8px; text-align: left;">Busto (cm)</th>
                                        <th style="border: 1px solid #ddd; padding: 8px; text-align: left;">Comprimento (cm)</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td style="border: 1px solid #ddd; padding: 8px; font-weight: bold;">P</td>
                                        <td style="border: 1px solid #ddd; padding: 8px;"><input type="text" id="busto-p" name="BUSTO_P" placeholder="Ex: 80-84" style="width: 100%; padding: 5px; border: 1px solid #ccc; border-radius: 3px;"></td>
                                        <td style="border: 1px solid #ddd; padding: 8px;"><input type="text" id="comp-p" name="COMP_P" placeholder="Ex: 30" style="width: 100%; padding: 5px; border: 1px solid #ccc; border-radius: 3px;"></td>
                                    </tr>
                                    <tr>
                                        <td style="border: 1px solid #ddd; padding: 8px; font-weight: bold;">M</td>
                                        <td style="border: 1px solid #ddd; padding: 8px;"><input type="text" id="busto-m" name="BUSTO_M" placeholder="Ex: 86-90" style="width: 100%; padding: 5px; border: 1px solid #ccc; border-radius: 3px;"></td>
                                        <td style="border: 1px solid #ddd; padding: 8px;"><input type="text" id="comp-m" name="COMP_M" placeholder="Ex: 32" style="width: 100%; padding: 5px; border: 1px solid #ccc; border-radius: 3px;"></td>
                                    </tr>
                                    <tr>
                                        <td style="border: 1px solid #ddd; padding: 8px; font-weight: bold;">G</td>
                                        <td style="border: 1px solid #ddd; padding: 8px;"><input type="text" id="busto-g" name="BUSTO_G" placeholder="Ex: 92-96" style="width: 100%; padding: 5px; border: 1px solid #ccc; border-radius: 3px;"></td>
                                        <td style="border: 1px solid #ddd; padding: 8px;"><input type="text" id="comp-g" name="COMP_G" placeholder="Ex: 34" style="width: 100%; padding: 5px; border: 1px solid #ccc; border-radius: 3px;"></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <!-- Etapa 3: Imagens -->
                <div class="form-step" data-step="3">
                    <h3>Imagens do Produto</h3>
                    <p class="step-description">Adicione fotos do seu produto para atrair mais compradores.</p>
                    
                    <div class="form-group">
                        <label>Imagem Principal</label>
                        <div class="image-upload" onclick="document.getElementById('image-input').click()">
                            <i class="fas fa-cloud-upload-alt" style="font-size: 48px; color: #ccc; margin-bottom: 10px;"></i>
                            <p>Clique para selecionar uma imagem</p>
                            <input type="file" id="image-input" accept="image/*" style="display: none;">
                        </div>
                        <img id="image-preview" class="image-preview" alt="Preview">
                    </div>
                </div>

                <!-- Etapa 4: Revisão -->
                <div class="form-step" data-step="4">
                    <h3>Revisão do Produto</h3>
                    <p class="step-description">Confira todas as informações antes de publicar seu produto.</p>
                    
                    <div id="review-content">
                        <!-- Conteúdo será preenchido via JavaScript -->
                    </div>
                </div>

                <div class="actions">
                    <button type="button" id="prev-btn" class="btn btn-secondary" style="display: none;">← Anterior</button>
                    <div style="flex: 1;"></div>
                    <button type="button" id="next-btn" class="btn btn-primary">Próximo →</button>
                    <button type="submit" id="submit-btn" class="btn btn-success" style="display: none;">
                        <i class="fas fa-save"></i> Publicar Produto
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const user = JSON.parse(localStorage.getItem('loggedUser') || '{}');
            
            if (!user.sellerId && !user.id) {
                window.location.href = '/login';
                return;
            }

            const imageInput = document.getElementById('image-input');
            const imagePreview = document.getElementById('image-preview');
            const messageDiv = document.getElementById('message');
            const form = document.getElementById('product-form');
            const priceInput = document.getElementById('valor');
            const taxInfo = document.getElementById('tax-info');
            const taxRate = document.getElementById('tax-rate');
            const finalValue = document.getElementById('final-value');
            
            // Calcular taxa ao digitar preço
            priceInput.addEventListener('input', function() {
                const price = parseFloat(this.value);
                if (price > 0) {
                    let rate, taxAmount, finalAmount;
                    
                    if (price <= 74.99) {
                        rate = 25;
                    } else if (price <= 99.99) {
                        rate = 15;
                    } else {
                        rate = 12;
                    }
                    
                    taxAmount = price * (rate / 100);
                    finalAmount = price - taxAmount;
                    
                    taxRate.textContent = `Taxa aplicada: ${rate}% (R$ ${taxAmount.toFixed(2).replace('.', ',')})`;
                    finalValue.textContent = `Você receberá: R$ ${finalAmount.toFixed(2).replace('.', ',')}`;
                    taxInfo.style.display = 'block';
                } else {
                    taxInfo.style.display = 'none';
                }
            });
            const descricaoInput = document.getElementById('descricao');
            const descCounter = document.getElementById('desc-counter');
            const nextBtn = document.getElementById('next-btn');
            const prevBtn = document.getElementById('prev-btn');
            const submitBtn = document.getElementById('submit-btn');
            const categoriaSelect = document.getElementById('categoria');
            const subcategoriaGroup = document.getElementById('subcategoria-group');
            const subcategoriaSelect = document.getElementById('subcategoria');
            
            let currentStep = 1;
            const totalSteps = 4;
            
            // Subcategorias para roupas
            const subcategorias = {
                '3': [
                    { value: 'conjunto', text: 'Conjunto' },
                    { value: 'sutia', text: 'Sutiã' },
                    { value: 'calcinha', text: 'Calcinha' },
                    { value: 'blusa', text: 'Blusa' },
                    { value: 'calca', text: 'Calça' }
                ]
            };
            
            // Event listener para categoria
            categoriaSelect.addEventListener('change', function() {
                const categoriaId = this.value;
                const tamanhoGroup = document.getElementById('tamanho-group');
                const tamanhoSelect = document.getElementById('tamanho');
                
                if (categoriaId === '3') { // Roupas
                    subcategoriaGroup.style.display = 'block';
                    subcategoriaSelect.innerHTML = '<option value="">Selecione uma subcategoria</option>';
                    
                    subcategorias[categoriaId].forEach(sub => {
                        const option = document.createElement('option');
                        option.value = sub.value;
                        option.textContent = sub.text;
                        subcategoriaSelect.appendChild(option);
                    });
                    
                    subcategoriaSelect.required = true;
                    tamanhoGroup.style.display = 'block';
                    tamanhoSelect.required = true;
                    document.getElementById('tabela-tamanhos-group').style.display = 'block';
                } else {
                    subcategoriaGroup.style.display = 'none';
                    subcategoriaSelect.required = false;
                    tamanhoGroup.style.display = 'none';
                    tamanhoSelect.required = false;
                    document.getElementById('tabela-tamanhos-group').style.display = 'none';
                }
            });
            

            
            // Contador de caracteres da descrição
            descricaoInput.addEventListener('input', () => {
                const length = descricaoInput.value.length;
                descCounter.textContent = `${length}/250 caracteres`;
                if (length > 240) {
                    descCounter.style.color = '#dc3545';
                } else {
                    descCounter.style.color = '#666';
                }
            });
            
            // Navegação entre etapas
            nextBtn.addEventListener('click', () => {
                if (validateCurrentStep()) {
                    if (currentStep < totalSteps) {
                        currentStep++;
                        updateStep();
                    }
                }
            });
            
            prevBtn.addEventListener('click', () => {
                if (currentStep > 1) {
                    currentStep--;
                    updateStep();
                }
            });
            
            function validateCurrentStep() {
                const currentStepDiv = document.querySelector(`.form-step[data-step="${currentStep}"]`);
                const requiredFields = currentStepDiv.querySelectorAll('input[required], select[required]');
                
                for (let field of requiredFields) {
                    if (!field.value.trim()) {
                        field.focus();
                        showMessage('Por favor, preencha todos os campos obrigatórios.', 'error');
                        return false;
                    }
                }
                

                
                return true;
            }
            
            function updateStep() {
                // Atualizar progress steps
                document.querySelectorAll('.step').forEach((step, index) => {
                    step.classList.remove('active', 'completed');
                    if (index + 1 < currentStep) {
                        step.classList.add('completed');
                    } else if (index + 1 === currentStep) {
                        step.classList.add('active');
                    }
                });
                
                // Atualizar form steps
                document.querySelectorAll('.form-step').forEach(step => {
                    step.classList.remove('active');
                });
                document.querySelector(`.form-step[data-step="${currentStep}"]`).classList.add('active');
                
                // Atualizar botões
                prevBtn.style.display = currentStep > 1 ? 'block' : 'none';
                nextBtn.style.display = currentStep < totalSteps ? 'block' : 'none';
                submitBtn.style.display = currentStep === totalSteps ? 'block' : 'none';
                
                // Atualizar conteúdo da revisão
                if (currentStep === 4) {
                    updateReviewContent();
                }
            }
            
            function updateReviewContent() {
                const reviewDiv = document.getElementById('review-content');
                const nome = document.getElementById('nome').value;
                const descricao = document.getElementById('descricao').value;
                const valor = document.getElementById('valor').value;
                const categoria = document.getElementById('categoria');
                const categoriaText = categoria.options[categoria.selectedIndex].text;
                const subcategoria = document.getElementById('subcategoria');
                const subcategoriaText = subcategoria.value ? subcategoria.options[subcategoria.selectedIndex].text : 'Não aplicável';
                const tamanho = document.getElementById('tamanho');
                const tamanhoText = tamanho.value ? tamanho.value : 'Não aplicável';
                const quantidade = document.getElementById('quantidade').value;
                
                // Tabela de tamanhos
                let tabelaTamanhos = 'Não aplicável';
                if (categoria.value === '3') {
                    const bustoP = document.getElementById('busto-p').value;
                    const compP = document.getElementById('comp-p').value;
                    const bustoM = document.getElementById('busto-m').value;
                    const compM = document.getElementById('comp-m').value;
                    const bustoG = document.getElementById('busto-g').value;
                    const compG = document.getElementById('comp-g').value;
                    
                    tabelaTamanhos = `
                        <table style="width: 100%; border-collapse: collapse; margin-top: 10px;">
                            <tr><th style="border: 1px solid #ddd; padding: 5px;">Tamanho</th><th style="border: 1px solid #ddd; padding: 5px;">Busto</th><th style="border: 1px solid #ddd; padding: 5px;">Comprimento</th></tr>
                            <tr><td style="border: 1px solid #ddd; padding: 5px;">P</td><td style="border: 1px solid #ddd; padding: 5px;">${bustoP || '-'}</td><td style="border: 1px solid #ddd; padding: 5px;">${compP || '-'}</td></tr>
                            <tr><td style="border: 1px solid #ddd; padding: 5px;">M</td><td style="border: 1px solid #ddd; padding: 5px;">${bustoM || '-'}</td><td style="border: 1px solid #ddd; padding: 5px;">${compM || '-'}</td></tr>
                            <tr><td style="border: 1px solid #ddd; padding: 5px;">G</td><td style="border: 1px solid #ddd; padding: 5px;">${bustoG || '-'}</td><td style="border: 1px solid #ddd; padding: 5px;">${compG || '-'}</td></tr>
                        </table>
                    `;
                }
                
                reviewDiv.innerHTML = `
                    <div style="border: 1px solid #ddd; border-radius: 8px; padding: 20px; background: #f9f9f9;">
                        <h4 style="margin-bottom: 15px; color: #333;">Resumo do Produto</h4>
                        <p><strong>Nome:</strong> ${nome}</p>
                        <p><strong>Descrição:</strong> ${descricao || 'Não informada'}</p>
                        <p><strong>Preço:</strong> R$ ${parseFloat(valor).toFixed(2).replace('.', ',')}</p>
                        <div style="background: #e8f5e8; padding: 10px; border-radius: 6px; margin: 10px 0;">
                            <strong>Informações Financeiras:</strong><br>
                            ${(() => {
                                const price = parseFloat(valor);
                                let rate = price <= 74.99 ? 25 : price <= 99.99 ? 15 : 12;
                                const taxAmount = price * (rate / 100);
                                const finalAmount = price - taxAmount;
                                return `Taxa: ${rate}% (R$ ${taxAmount.toFixed(2).replace('.', ',')})<br>Você receberá: <strong>R$ ${finalAmount.toFixed(2).replace('.', ',')}</strong>`;
                            })()}
                        </div>
                        <p><strong>Categoria:</strong> ${categoriaText}</p>
                        <p><strong>Subcategoria:</strong> ${subcategoriaText}</p>
                        <p><strong>Tamanho:</strong> ${tamanhoText}</p>
                        <p><strong>Quantidade:</strong> ${quantidade} unidades</p>
                        <div><strong>Tabela de Tamanhos:</strong> ${tabelaTamanhos}</div>
                        <p><strong>Imagem:</strong> ${imageInput.files[0] ? 'Adicionada' : 'Não adicionada'}</p>
                    </div>
                `;
            }

            imageInput.addEventListener('change', (e) => {
                const file = e.target.files[0];
                if (file) {
                    // Comprimir imagem antes de mostrar preview
                    compressImage(file, (compressedDataUrl) => {
                        imagePreview.src = compressedDataUrl;
                        imagePreview.style.display = 'block';
                    });
                }
            });
            
            function compressImage(file, callback) {
                const canvas = document.createElement('canvas');
                const ctx = canvas.getContext('2d');
                const img = new Image();
                
                img.onload = function() {
                    // Redimensionar para máximo 800x600
                    let { width, height } = img;
                    const maxWidth = 800;
                    const maxHeight = 600;
                    
                    if (width > maxWidth || height > maxHeight) {
                        const ratio = Math.min(maxWidth / width, maxHeight / height);
                        width *= ratio;
                        height *= ratio;
                    }
                    
                    canvas.width = width;
                    canvas.height = height;
                    
                    ctx.drawImage(img, 0, 0, width, height);
                    
                    // Comprimir com qualidade 0.7
                    const compressedDataUrl = canvas.toDataURL('image/jpeg', 0.7);
                    callback(compressedDataUrl);
                };
                
                const reader = new FileReader();
                reader.onload = (e) => {
                    img.src = e.target.result;
                };
                reader.readAsDataURL(file);
            }

            form.addEventListener('submit', async (e) => {
                e.preventDefault();
                
                const formData = new FormData(form);
                const price = parseFloat(formData.get('VALOR_UNITARIO'));
                
                const productData = {
                    NOME_PROD: formData.get('NOME_PROD'),
                    DESCRICAO_PROD: formData.get('DESCRICAO_PROD'),
                    VALOR_UNITARIO: price,
                    ID_CATEGORIA: formData.get('ID_CATEGORIA') || null,
                    SUBCATEGORIA: formData.get('SUBCATEGORIA') || null,
                    TAMANHO: formData.get('TAMANHO') || null,
                    QUANTIDADE: parseInt(formData.get('QUANTIDADE')) || 1,
                    BUSTO_P: formData.get('BUSTO_P') || null,
                    COMP_P: formData.get('COMP_P') || null,
                    BUSTO_M: formData.get('BUSTO_M') || null,
                    COMP_M: formData.get('COMP_M') || null,
                    BUSTO_G: formData.get('BUSTO_G') || null,
                    COMP_G: formData.get('COMP_G') || null,
                    ID_VENDEDOR: user.id
                };

                if (imageInput.files[0]) {
                    // Usar imagem comprimida do preview
                    const compressedBase64 = imagePreview.src.split(',')[1];
                    productData.IMAGEM_BASE64 = compressedBase64;
                    await submitProduct(productData);
                } else {
                    await submitProduct(productData);
                }
            });

            async function submitProduct(productData) {
                console.log('Enviando produto:', productData);
                try {
                    const response = await fetch('/api/products', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(productData)
                    });

                    console.log('Response status:', response.status);
                    const result = await response.json();
                    console.log('Response data:', result);
                    
                    if (result.success) {
                        showMessage('Produto criado com sucesso!', 'success');
                        form.reset();
                        imagePreview.style.display = 'none';
                        setTimeout(() => window.location.href = '/perfil', 2000);
                    } else {
                        const friendlyMessage = getFriendlyErrorMessage(result.message);
                        showMessage(friendlyMessage, 'error');
                    }
                } catch (error) {
                    console.error('Erro ao enviar produto:', error);
                    showMessage('Erro de conexão', 'error');
                }
            }

            function getFriendlyErrorMessage(technicalMessage) {
                if (!technicalMessage) return 'Ops! Algo deu errado. Tente novamente.';
                
                const message = technicalMessage.toLowerCase();
                
                if (message.includes('nome') && message.includes('obrigatório')) {
                    return 'Por favor, digite o nome do produto.';
                }
                if (message.includes('descrição') && message.includes('obrigatório')) {
                    return 'Por favor, adicione uma descrição para o produto.';
                }
                if (message.includes('valor') && message.includes('obrigatório')) {
                    return 'Por favor, informe o preço do produto.';
                }
                if (message.includes('quantidade') && message.includes('obrigatório')) {
                    return 'Por favor, informe quantos produtos você tem em estoque.';
                }
                if (message.includes('vendedor') && message.includes('obrigatório')) {
                    return 'Erro de identificação. Faça login novamente.';
                }
                if (message.includes('valor') && message.includes('maior que zero')) {
                    return 'O preço deve ser maior que zero.';
                }
                if (message.includes('duplicate') || message.includes('duplicado')) {
                    return 'Já existe um produto com essas informações.';
                }
                if (message.includes('connection') || message.includes('conexão')) {
                    return 'Problema de conexão. Verifique sua internet e tente novamente.';
                }
                if (message.includes('timeout')) {
                    return 'A operação demorou muito. Tente novamente.';
                }
                if (message.includes('server') || message.includes('servidor')) {
                    return 'Nosso sistema está temporariamente indisponível. Tente novamente em alguns minutos.';
                }
                
                return 'Ops! Algo deu errado. Verifique os dados e tente novamente.';
            }
            
            function showMessage(text, type) {
                messageDiv.textContent = text;
                messageDiv.className = `message ${type}`;
                messageDiv.style.display = 'block';
                setTimeout(() => messageDiv.style.display = 'none', 5000);
            }
        });
    </script>
</body>
</html>