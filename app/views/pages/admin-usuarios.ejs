<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Moderação | Admin</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css">
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font-family: Arial, sans-serif; background: #f5f5f5; }
        .header { background: #fff; padding: 1rem; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
        .container { max-width: 1200px; margin: 20px auto; padding: 0 20px; }
        .stats { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin-bottom: 30px; }
        .stat-card { background: #fff; padding: 20px; border-radius: 8px; text-align: center; }
        .stat-number { font-size: 32px; font-weight: bold; color: #333; }
        .stat-label { color: #666; margin-top: 5px; }
        .users-table { background: #fff; border-radius: 8px; overflow: hidden; }
        .table-header { padding: 20px; border-bottom: 1px solid #eee; display: flex; justify-content: space-between; align-items: center; }
        .search-box { padding: 8px 12px; border: 1px solid #ddd; border-radius: 4px; width: 300px; }
        table { width: 100%; border-collapse: collapse; }
        th, td { padding: 12px; text-align: left; border-bottom: 1px solid #eee; }
        th { background: #f8f9fa; font-weight: bold; }
        .user-type { padding: 4px 8px; border-radius: 12px; font-size: 12px; font-weight: bold; }
        .type-seller { background: #e3f2fd; color: #1976d2; }
        .type-buyer { background: #e8f5e8; color: #388e3c; }
        .type-admin { background: #fff3e0; color: #f57c00; }
        .btn { padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer; font-size: 12px; text-decoration: none; display: inline-block; }
        .btn-danger { background: #dc3545; color: white; }
        .btn-secondary { background: #6c757d; color: white; }
        .btn-info { background: #17a2b8; color: white; }
        .message { padding: 15px; border-radius: 6px; margin-bottom: 20px; text-align: center; display: none; }
        .success { background: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
        .error { background: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
    </style>
</head>
<body>
    <header class="header">
        <div style="display: flex; justify-content: space-between; align-items: center;">
            <h2><i class="fa fa-shield"></i> Moderação</h2>
            <a href="/admin-dashboard" class="btn btn-secondary">← Voltar ao Dashboard</a>
        </div>
    </header>

    <div class="container">
        <div id="message" class="message"></div>
        
        <div class="stats">
            <div class="stat-card">
                <div class="stat-number" id="total-users">0</div>
                <div class="stat-label">Total de Usuários</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="total-sellers">0</div>
                <div class="stat-label">Vendedores</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="total-buyers">0</div>
                <div class="stat-label">Compradores</div>
            </div>
        </div>

        <div class="users-table">
            <div class="table-header">
                <h3>Lista de Usuários</h3>
                <input type="text" id="search" class="search-box" placeholder="Buscar por nome ou email...">
            </div>
            <table>
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Nome</th>
                        <th>Email</th>
                        <th>Tipo</th>
                        <th>Celular</th>
                        <th>Cidade</th>
                        <th>Ações</th>
                    </tr>
                </thead>
                <tbody id="users-tbody">
                    <!-- Usuários serão carregados aqui -->
                </tbody>
            </table>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            const user = JSON.parse(localStorage.getItem('loggedUser') || '{}');
            
            if (!user.id || user.type !== 'admin') {
                alert('Acesso negado. Apenas administradores podem acessar esta página.');
                window.location.href = '/';
                return;
            }

            await loadUsers();
            
            document.getElementById('search').addEventListener('input', filterUsers);
        });

        let allUsers = [];

        async function loadUsers() {
            try {
                const response = await fetch('/api/admin/users');
                const result = await response.json();
                
                if (result.success) {
                    allUsers = result.users;
                    displayUsers(allUsers);
                    updateStats();
                } else {
                    showMessage(result.message || 'Erro ao carregar usuários', 'error');
                }
            } catch (error) {
                showMessage('Erro de conexão', 'error');
            }
        }

        function displayUsers(users) {
            const tbody = document.getElementById('users-tbody');
            tbody.innerHTML = users.map(user => `
                <tr>
                    <td>${user.ID_USUARIO}</td>
                    <td>${user.NOME_USUARIO}</td>
                    <td>${user.EMAIL_USUARIO}</td>
                    <td><span class="user-type type-${getTypeClass(user.TIPO_USUARIO)}">${getTypeLabel(user.TIPO_USUARIO)}</span></td>
                    <td>${user.CELULAR_USUARIO || '-'}</td>
                    <td>${user.CIDADE_USUARIO || '-'}</td>
                    <td>
                        <a href="/admin-usuario-detalhes?id=${user.ID_USUARIO}" class="btn btn-info" style="margin-right: 10px;">
                            <i class="fas fa-eye"></i> Ver
                        </a>
                        <button class="btn btn-danger" onclick="deleteUser(${user.ID_USUARIO})">
                            <i class="fas fa-trash"></i> Excluir
                        </button>
                    </td>
                </tr>
            `).join('');
        }

        function getTypeClass(type) {
            switch(type) {
                case 'V': return 'seller';
                case 'C': return 'buyer';
                case 'A': return 'admin';
                default: return 'buyer';
            }
        }

        function getTypeLabel(type) {
            switch(type) {
                case 'V': return 'Vendedor';
                case 'C': return 'Comprador';
                case 'A': return 'Admin';
                default: return 'Comprador';
            }
        }

        function updateStats() {
            const total = allUsers.length;
            const sellers = allUsers.filter(u => u.TIPO_USUARIO === 'V').length;
            const buyers = allUsers.filter(u => u.TIPO_USUARIO === 'C').length;
            
            document.getElementById('total-users').textContent = total;
            document.getElementById('total-sellers').textContent = sellers;
            document.getElementById('total-buyers').textContent = buyers;
        }

        function filterUsers() {
            const search = document.getElementById('search').value.toLowerCase();
            const filtered = allUsers.filter(user => 
                user.NOME_USUARIO.toLowerCase().includes(search) ||
                user.EMAIL_USUARIO.toLowerCase().includes(search)
            );
            displayUsers(filtered);
        }

        async function deleteUser(userId) {
            if (!confirm('Tem certeza que deseja excluir este usuário? Esta ação não pode ser desfeita.')) {
                return;
            }

            try {
                const response = await fetch(`/api/admin/users/${userId}`, {
                    method: 'DELETE'
                });
                const result = await response.json();
                
                if (result.success) {
                    showMessage('Usuário excluído com sucesso!', 'success');
                    await loadUsers();
                } else {
                    showMessage(result.message || 'Erro ao excluir usuário', 'error');
                }
            } catch (error) {
                showMessage('Erro de conexão', 'error');
            }
        }

        function showMessage(text, type) {
            const messageDiv = document.getElementById('message');
            messageDiv.textContent = text;
            messageDiv.className = `message ${type}`;
            messageDiv.style.display = 'block';
            setTimeout(() => messageDiv.style.display = 'none', 5000);
        }
    </script>
</body>
</html>